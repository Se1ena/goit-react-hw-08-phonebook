{"version":3,"file":"static/js/890.0c338cee.chunk.js","mappings":"gSAOaA,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAUTC,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,WACnBC,MAAOH,EAAAA,KAAaG,QAAQD,WAC5BE,SAAUJ,EAAAA,KACPK,IAAI,EAAG,+CACPH,aAGL,OACE,SAAC,IAAD,CAAMI,MAAM,SAASC,QAAQ,SAASC,EAAE,OAAOC,EAAG,EAAlD,UACE,SAAC,KAAD,CAAKA,EAAG,EAAGC,QAAQ,KAAKC,EAAG,GAA3B,UACE,SAAC,KAAD,CACEC,cApBY,CAClBX,KAAM,GACNE,MAAO,GACPC,SAAU,IAkBJS,SAfS,SAAAC,GAAM,OAAIjB,GAASkB,EAAAA,EAAAA,IAASD,GAAtB,EAgBff,iBAAkBA,EAHpB,SAKG,gBAAGiB,EAAH,EAAGA,aAAH,EAAiBF,OAAjB,EAAyBG,OAAzB,OACC,iBAAMJ,SAAUG,EAAcE,aAAa,MAA3C,UACE,UAAC,IAAD,CAAQC,QAAS,EAAGb,MAAM,aAA1B,WACE,SAAC,KAAD,CAAcL,KAAK,OAAOmB,MAAM,UAChC,SAAC,KAAD,CAAcnB,KAAK,QAAQmB,MAAM,WACjC,SAAC,KAAD,CACEnB,KAAK,WACLmB,MAAM,WACNC,WAAY,CAAEC,KAAM,eAEtB,SAAC,KAAD,CAAcC,YAAY,OAAOC,MAAM,OAAvC,wBAVL,OAoBd,ECnDc,SAASC,IACtB,OACE,iCACE,SAAC,KAAD,WACE,+CAEF,SAAC7B,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","Pages/Register.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\nimport { Box, Flex, VStack } from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport { InputControl, SubmitButton } from 'formik-chakra-ui';\nimport * as Yup from 'yup';\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n      };\n    \n      const onSubmit = values => dispatch(register(values));\n    \n      const validationSchema = Yup.object({\n        name: Yup.string().required(),\n        email: Yup.string().email().required(),\n        password: Yup.string()\n          .min(5, 'Password must contain at least 7 characters')\n          .required(),\n      });\n    \n      return (\n        <Flex align=\"center\" justify=\"center\" h=\"100%\" p={3}>\n          <Box p={6} rounded=\"md\" w={80}>\n            <Formik\n              initialValues={initialValues}\n              onSubmit={onSubmit}\n              validationSchema={validationSchema}\n            >\n              {({ handleSubmit, values, errors }) => (\n                <form onSubmit={handleSubmit} autoComplete=\"off\">\n                  <VStack spacing={4} align=\"flex-start\">\n                    <InputControl name=\"name\" label=\"Name\" />\n                    <InputControl name=\"email\" label=\"Email\" />\n                    <InputControl\n                      name=\"password\"\n                      label=\"Password\"\n                      inputProps={{ type: 'password' }}\n                    />\n                    <SubmitButton colorScheme=\"gray\" width=\"full\">\n                      Signup\n                    </SubmitButton>\n                  </VStack>\n                </form>\n              )}\n            </Formik>\n          </Box>\n        </Flex>\n      );\n};","import { Helmet } from 'react-helmet-async';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n}"],"names":["RegisterForm","dispatch","useDispatch","validationSchema","Yup","name","required","email","password","min","align","justify","h","p","rounded","w","initialValues","onSubmit","values","register","handleSubmit","errors","autoComplete","spacing","label","inputProps","type","colorScheme","width","Register"],"sourceRoot":""}